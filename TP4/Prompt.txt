Simulacion({'evento': 'Inicialización', 'proximo_evento': 'llegada_empleado(1)', 'reloj': 0.0, 'rnd_llegada_empleado': 0.73, 'tiempo_entre_llegadas_empleado': 2.55, 'proxima_llegada_empleado': 2.55, 'rnd_llegada_tecnico': 0.06, 'tiempo_en_llegar_tecnico': 47.46, 'proxima_llegada_tecnico': 47.46, 'rnd_fin_registro_huella': '', 'tiempo_registro_huella': '', 'fin_registro_huella_t1': '', 'fin_registro_huella_t2': '', 'fin_registro_huella_t3': '', 'fin_registro_huella_t4': '', 'rnd_fin_mantenimiento_terminal': '', 'tiempo_mantenimiento_terminal': '', 'fin_mantenimiento_t1': '', 'fin_mantenimiento_t2': '', 'fin_mantenimiento_t3': '', 'fin_mantenimiento_t4': '', 'estado_tecnico': 'L', 'acumulador_tiempo_espera': 0, 'acumulador_empleados_que_salen_temporalmente': 0, 'acumulador_empleados_que_pasaron_por_el_sistema': 0, 'contador_empleados_que_salen_temporalmente': 0})

vamos a empezar todo desde cero. actualmente tengo que hacer una simulacion de un sistema de colas. las columnas (atributos de la clase simulacion) que tienen que estar si o si son las siguientes:


1. Evento: en la primera iteración se llama "Inicialización". En las siguientes, su nombre se obtiene de la segunda columna llamada proximo_evento
2. Proximo Evento: es la segunda columna, su nombre será el del evento que tenga el menor tiempo de la fila actual (si hay 2 o mas eventos con el mismo tiempo minimo, se elige al azar)
3. Reloj: es la tercera columna, su valor será el de la columna de tiempo del proximo evento que identificamos antes
4. 3 columnas del evento llegada_empleado(nº empleado), donde tenemos:
4.a columna rnd_llegada_empleado
4.b columna tiempo_entre_llegada_empleado
4.c columna proxima_llegada_empleado
5. 3 columnas del evento llegada_tecnico, donde tenemos:
5.a columna rnd_llegada_tecnico
5.b columna tiempo_entre_llegada_tecnico
5.c columna proxima_llegada_tecnico (esta es importante para determinar el proximo evento), su valor será guardado en cada iteración hasta que el evento sea seleccionado)
6. 6 columnas para el evento fin_registro_huella(nº terminal, nº empleado), donde tenemos:
6.a columna rnd_registro_huella
6.b columna tiempo_registro_huella
6.c columnas fin_registro_huella(nº terminal): en este caso van a ser 4 terminales, por lo que tendremos 4 columnas donde solo cambiará el nº terminal (estas columnas son importantes para determinar el proximo evento), el valor de cada una será guardado en cada iteración hasta que el evento de alguna sea seleccionado por el algoritmo explicado en la segunda columna
7.  6 columas para el evento fin_mantenimiento_terminal (nº terminal), donde tenemos:
7.a columna rnd_mantenimiento_terminal
7.b columna tiempo_mantenimiento_terminal
7.c columnas fin_mantemiento_terminal(nº terminal): en este caso van a ser 4 terminales, por lo que tendremos 4 columnas donde solo cambiará el nº terminal (estas columnas son importantes para determinar el proximo evento), el valor de cada una será guardado en cada iteración hasta que el evento de alguna sea seleccionado por el algoritmo explicado en la segunda columna
8. 5 columnas para el objeto "Terminal", donde tenemos
8.a Estado (nº terminal): acá vamos a tener 4 posibles estados: Libre("L"), Ocupada en Registro("OR"), Ocupada en Mantenimiento ("OM") o Ocupada en Registro y Mantenimiento ("ORM") segun sea el caso de la logica explicada mas adelante. Osea aca vamos a tener 4 columnas
8.b Columna Cola de empleados (la llamaremos "Cola" simplemente)
9. columna "Acumulador de tiempo de espera" (se inicializa en 0, y luego cambiará segun la logica mas adelante explicada)
10. columna "Empleados que salen temporalmente" (se inicializa en 0, y luego cambiará segun la logica mas adelante explicada)
11. columna "Empleados que estuvieron en el sistema" (se inicializa en 0, y luego cambiará segun la logica mas adelante explicada)
12. 1 columna del objeto Tecnico, con un atributo llamado Estado, de los cuales serán dos posibles: Libre("L") o Realizando Mantenimiento ("RM (nºterminal en la que está realizando el mantenimiento)), la logica estará explicada mas debajo
13. N columnas para el objeto Empleado
cada empleado tendrá 3 columnas dedicadas, las cuales son:
a. columna Estado: tendremos 3 posibles segun la logica: "Haciendo Registro" ("HR(nº terminal en la que está registrando su huella)"), "En Cola" ("EC"), y "Saliendo Temporalmente" ("ST"), la logica tambien está explicada debajo
b. columna

perfecto, entonces trataré de explicarte la lógica del llenado de estas columnas(atributos)

perfecto, entonces trataré de explicarte la lógica del llenado de estas columnas(atributos)

primero que nada, como dije antes, tendremos que trabajar solamente con 2 filas en memoria (esto quiere decir que una fila se produce a partir de la anterior)

segundo, a partir de la fila anterior la fila actual se completará de la siguiente forma:

columna proximo_evento: se obtendrá calculando el minimo de los tiempos de evento (como dije antes) y el valor de la columna de todos los empleados llamado "Minuto en que sale temporalmente" (olvidé mencionar un quinto evento llamado regreso_empleado, que se llenará con el valor del reloj + 30
esta columna tendrá el nombre del evento correspondiente al evento que tenga el minimo valor como dije antes

columna reloj: será el valor del proximo evento encontrado (el minimo encontrado, como dije antes)

columnas del evento llegada_empleado (se activará unicamente si es el evento actual):
-rnd: simplemente un numero random entre 0 y 1 
-tiempo_entre_llegadas: numero obtenido aplicando la formula X = -Media * LN (1-RND)
-proxima_llegada_empleado: se obtiene sumando el valor del reloj + tiempo_entre_llegadas (esta columna mantendrá su valor hasta que sea elegida como proximo evento)

columnas evento llegada_tecnico
-rnd: simplemente un numero random entre 0 y 1 
-tiempo_entre_llegadas: numero obtenido aplicando la formula X = A + RND(B-A)
-proxima_llegada_tecnico: se obtiene sumando el valor del reloj + tiempo_entre_llegadas (esta columna mantendrá su valor hasta que sea elegida como proximo evento)

columnas fin_registro_huella
-rnd: simplemente un numero random entre 0 y 1 (esta columna se va a activar cuando en la fila anterior se haya detectado una transicion de la terminal seleccionada del estado "Libre" a "Ocupada en Registro" o si se produce un evento fin_registro_huella(en esa terminal) y tenemos que la cola no esta en 0, causando una transicion de esa terminal de "Ocupada en Registro" a "Ocupada en Registro"
-tiempo_registro_huella: numero obtenido aplicando la formula X = A + RND(B-A). esta columna se activa solo si la anterior tambien lo está
-fin_registro_huella(nº terminal): cada una de estas 4 columnas obtiene su valor sumando el valor del reloj + tiempo_entre_llegadas (en el caso en que las primeras 2 columnas tambien estén activas, y si no se quedan vacias)(esta columna mantendrá su valor (si es que no estaba vacia) hasta que sea elegida como proximo evento). la columna correspondiente hará que la terminal cambie de estado a "Ocupada en Registro" y que el empleado asignado a esa terminal cambie de estado a "Haciendo Registro (nº de terminal")

columnas del evento fin_mantenimiento_terminal:
-rnd: numero aleatorio del 0 al 1. esta columna se activa si el evento actual es llegada_tecnico, o si es fin_mantenimiento_terminal(nº terminal), haciendo que el tecnico pase a hacer mantenimiento a otra terminal (y eventualmente cambiando su estado)
-tiempo_mantenimiento: se obtiene aplicando la formula X = A+RND(B-A), obviamente se activará si está activa la anterior
- fin_mantenimiento_terminal(nº terminal): cada una de estas 4 columnas obtiene su valor sumando el valor del reloj + tiempo_mantenimiento (en el caso en que las primeras 2 columnas tambien estén activas, y si no se quedan vacias)(esta columna mantendrá su valor (si es que no estaba vacia) hasta que sea elegida como proximo evento). el numero de terminal explicitado en el evento provocará que cambie el estado del tecnico a RM(nº terminal) y el estado de la terminal a "Ocupada en Mantenimiento" (si estaba libre) o "Ocupada en Registro y Mantenimiento" (si estaba con algun empleado registrandose en la misma)

columna del evento regreso_cliente(nº cliente):
tendra como dije 1 sola columna, que se active cuando tengamos algun empleado con estado "Saliendo Temporalmente", y su valor será la suma de la columna correspondiente al empleado con ese estado "Minuto en que sale temporalmente" + 30 

columna "Acumulador de tiempo de Espera", que será inicializada en 0 como dije anteriormente, y acumulará el valor contenido en el empleado en "Minuto en que entra en cola" solamente cuando el empleado tenga una transicion de estado de "Esperando en Cola" a "Haciendo Registro (nº terminal")

columna "Empleados que salen temporalmente", que será inicializada tambien en 0, y sumará en 1 solamente si encontramos algun/os empleados que tengan la transicion de estado de "Saliendo Temporalmente" a cualquiera de los otros 2 estados

columna "Empleados que estuvieron en el sistema", que tambien estará inicializada en 0, y sumará en 1 solamente cuando algun objeto Empleado sea destruido del sistema (quiere decir que ya realizó su registro en alguna terminal)

columna correspondiente al tecnico, con 2 posibles estados como dije antes

columna correspondiente a los N empleados
un empleado será creado con sus 3 atributos solamente cuando se produzca el evento llegada_cliente(y su numero). su columna Estado variará de la siguiente forma: si encuentra 1 o mas terminales libres, irá a alguna de esas y cambiará su estado a "Haciendo Registro (nºterminal)". si por el contrario, todas las terminales están ocupadas y la cola es menor o igual a 5, su estado será "En Cola", y la columna "Minuto que entra en cola" dejará de estar vacia y se llenará con el valor del reloj actual, manteniendo su valor hasta que cambie de estado a "Haciendo Registro" (esto quiere decir que la columna "minuto que entra en cola" solo estará completa cuando tenga ese estado). y como ultimo caso, si el empleado llega y encuentra todas las terminales ocupadas y ademas una cola mayor a 5, entonces su estado será "Saliendo Temporalmente", llenando la columna "minuto que sale temporalmente", que servirá como disparador del evento regreso_cliente (y todo lo que expliqué antes)
Una vez que se produzca el evento fin_registro_huella(nº terminal, nºempleado), el empleado correspondiente a ese numero será destruido del sistema.
Como ultima aclaración, cada empleado comienza con un numero 1, y a medida que van llegando, su numero aumenta en 1.

y esa es toda la logica que se me ocurre ahora. haz el programa teniendo en cuenta todo esto y que funcione



